include "../common/akka.conf"
include "../common/metrics.conf"
include "../common/matsim.conf"

##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "apgu"
beam.agentsim.numAgents = 2
beam.agentsim.firstIteration = 0
beam.agentsim.lastIteration = 1
beam.agentsim.thresholdForWalkingInMeters = 100
beam.agentsim.thresholdForMakingParkingChoiceInMeters = 100
beam.agentsim.schedulerParallelismWindow = 30
beam.agentsim.timeBinSize = 3600
beam.agentsim.startTime = "00:00:00"
beam.agentsim.endTime = "30:00:00"

# MODE CHOICE OPTIONS:
# ModeChoiceMultinomialLogit ModeChoiceTransitIfAvailable ModeChoiceDriveIfAvailable ModeChoiceRideHailIfAvailable
# ModeChoiceUniformRandom ModeChoiceLCCM
beam.agentsim.agents.modalBehaviors.modeChoiceClass = "ModeChoiceMultinomialLogit"
beam.agentsim.agents.modalBehaviors.defaultValueOfTime = 8.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.transfer = -1.4
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.car_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_transit_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.drive_transit_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_transit_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_intercept = -2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_pooled_intercept = 20.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_intercept = 2.0
beam.agentsim.agents.modalBehaviors.overrideAutomationLevel = 5
beam.agentsim.agents.modalBehaviors.overrideAutomationForVOTT = false
beam.agentsim.agents.modalBehaviors.lccm.filePath = ${beam.inputDirectory}"/lccm-long.csv"
beam.agentsim.agents.modeIIncentive.filePath = ${beam.inputDirectory}"/incentives.csv"
beam.agentsim.agents.ptFare.filePath = ${beam.inputDirectory}"/ptFares.csv"
beam.agentsim.agents.plans {
  inputPlansFilePath = ${beam.inputDirectory}"/population/population.xml"
  inputPersonAttributesFilePath = ${beam.inputDirectory}"/population/populationAttributes.xml"
}
beam.agentsim.agents.households {
  inputFilePath = ${beam.inputDirectory}"/households/households.xml"
  inputHouseholdAttributesFilePath = ${beam.inputDirectory}"/household/householdAttributes.xml"
}
#BeamVehicles Params
# beam.agentsim.agents.vehicles.linkToGradePercentFilePath = ${beam.inputDirectory}"/linkToGradePercent.csv"
beam.agentsim.agents.vehicles.fuelTypesFilePath = ${beam.inputDirectory}"/beamFuelTypes.csv"
beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/vehicleTypes.csv"
beam.agentsim.agents.vehicles.vehiclesFilePath = ${beam.inputDirectory}"/vehicles.csv"
beam.agentsim.agents.vehicles.sharedFleets = []
# Population Adjustmnet (DEFAULT_ADJUSTMENT | PERCENTAGE_ADJUSTMENT)
beam.agentsim.populationAdjustment="DEFAULT_ADJUSTMENT"

###########################
# Physsim
###########################
beam.physsim.inputNetworkFilePath = ${beam.inputDirectory}"/r5/physsim-network.xml"
beam.physsim.flowCapacityFactor = 0.0001
beam.physsim.storageCapacityFactor = 1.0
beam.physsim.writeMATSimNetwork = false
beam.physsim.ptSampleSize = 1.0
beam.physsim.jdeqsim.agentSimPhysSimInterfaceDebugger.enabled = false
beam.physsim.skipPhysSim = false
beam.physsim.jdeqsim.cacc.enabled = false
beam.physsim.jdeqsim.cacc.minRoadCapacity = 1999
beam.physsim.jdeqsim.cacc.minSpeedMetersPerSec = 7
beam.physsim.jdeqsim.cacc.speedAdjustmentFactor = 1.0
beam.physsim.events.fileOutputFormats = "xml"

###########################
# Replanning
###########################
beam.replanning{
  maxAgentPlanMemorySize = 4
  Module_1 = "SelectExpBeta"
  ModuleProbability_1 = 0.7
  Module_2 = "ClearRoutes"
  ModuleProbability_2 = 0.1
  Module_3 = "ClearModes"
  ModuleProbability_3 = 0.1
  Module_4 = "TimeMutator"
  ModuleProbability_4 = 0.1
  fractionOfIterationsToDisableInnovation = 9999999
}
##################################################################
# Warm Mode
##################################################################
beam.warmStart.enabled = false
beam.warmStart.path = "https://s3.us-east-2.amazonaws.com/beam-outputs/run149-base__2018-06-27_20-28-26_2a2e2bd3.zip"

##################################################################
# OUTPUTS
##################################################################
# The outputDirectory is the base directory where outputs will be written. The beam.agentsim.simulationName param will
# be used as the name of a sub-directory beneath the baseOutputDirectory for simulation results.
# If addTimestampToOutputDirectory == true, a timestamp will be added, e.g. "beamville_2017-12-18_16-48-57"
beam.outputs.baseOutputDirectory = "output/apgu_test"
beam.outputs.baseOutputDirectory = ${?BEAM_OUTPUT}
beam.outputs.addTimestampToOutputDirectory = true

# To keep all logging params in one place, BEAM overrides MATSim params normally in the controller config module
beam.outputs.defaultWriteInterval = 1
beam.outputs.writePlansInterval = ${beam.outputs.defaultWriteInterval}
beam.outputs.writeEventsInterval = ${beam.outputs.defaultWriteInterval}
beam.physsim.writeEventsInterval = ${beam.outputs.defaultWriteInterval}
beam.physsim.writePlansInterval = ${beam.outputs.defaultWriteInterval}
beam.outputs.writeLinkTraversalInterval = 0
beam.physsim.linkStatsWriteInterval = 0

# The remaining params customize how events are written to output files
beam.outputs.events.fileOutputFormats = "csv,xml" # valid options: xml(.gz) , csv(.gz), none - DEFAULT: csv.gz

# Events Writing Logging Levels:
beam.outputs.events.eventsToWrite = "ActivityEndEvent,ActivityStartEvent,PersonEntersVehicleEvent,PersonLeavesVehicleEvent,ModeChoiceEvent,PathTraversalEvent,ReserveRideHailEvent,ReplanningEvent,RefuelEvent,ParkEvent,LeavingParkingEvent,PersonCostEvent,AgencyRevenueEvent"
beam.outputs.stats.binSize = 3600
##################################################################
# Debugging
##################################################################
beam.debug.debugEnabled = true
beam.debug.debugActorTimerIntervalInSec = 60
beam.debug.actor.logDepth = 12

beam.debug.stuckAgentDetection {
  checkIntervalMs = 200
  checkMaxNumberOfMessagesEnabled = true
  defaultTimeoutMs = 60000
  enabled = false
  overallSimulationTimeoutMs = 100000
  thresholds = [
    {
      actorTypeToMaxNumberOfMessages {
        population = 1
        rideHailAgent = 1
        transitDriverAgent = 1
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.agents.InitializeTrigger"
    },
    {
      actorTypeToMaxNumberOfMessages {
        population = 11
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.agents.PersonAgent$ActivityEndTrigger"
    },
    {
      actorTypeToMaxNumberOfMessages {
        population = 1
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.agents.PersonAgent$ActivityStartTrigger"
    },
    {
      actorTypeToMaxNumberOfMessages {
        population = 60
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.agents.PersonAgent$PersonDepartureTrigger"
    },
    {
      actorTypeToMaxNumberOfMessages {
        population = 20
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$AlightVehicleTrigger"
    },
    {
      actorTypeToMaxNumberOfMessages {
        population = 20
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$BoardVehicleTrigger"
    },
    {
      actorTypeToMaxNumberOfMessages {
        population = 80
        rideHailAgent = 400
        transitDriverAgent = 114
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$EndLegTrigger"
    },
    {
      actorTypeToMaxNumberOfMessages {
        population = 80
        rideHailAgent = 400
        transitDriverAgent = 114
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.agents.modalbehaviors.DrivesVehicle$StartLegTrigger"
    },
    {
      actorTypeToMaxNumberOfMessages {
        transitDriverAgent = 1
      }
      markAsStuckAfterMs = 20000
      triggerType = "beam.agentsim.scheduler.BeamAgentScheduler$KillTrigger"

    }
  ]
}
##################################################################
# SPATIAL
##################################################################
beam.spatial = {
  localCRS = "epsg:32631"  # what crs to use for distance calculations, must be in units of meters
  boundingBoxBuffer = 10000 # meters of buffer around network for defining extend of spatial indices
}

##################################################################
# BEAM ROUTING SERVICE
##################################################################
beam.routing {
  #Base local date in ISO 8061 YYYY-MM-DDTHH:MM:SS+HH:MM
  baseDate = "2016-10-17T00:00:00-07:00"
  transitOnStreetNetwork = true # PathTraversalEvents for transit vehicles
  r5 {
    directory = ${beam.inputDirectory}"/r5"
    # Departure window in min
    departureWindow = 1.0167
    osmFile = ${beam.inputDirectory}"/r5/apgu_test.osm"
 # osmMapdbFile = ${beam.inputDirectory}"/r5/osm.mapdb"
    mNetBuilder.fromCRS = "epsg:4326" # WGS84
    mNetBuilder.toCRS = ${beam.spatial.localCRS}
  }
  startingIterationForTravelTimesMSA = 1
}
##################################################################
# Calibration
##################################################################
beam.calibration.objectiveFunction = "ModeChoiceObjectiveFunction"
beam.calibration.mode.benchmarkFilePath=${beam.inputDirectory}"/calibration/benchmark.csv"
beam.calibration.counts {
  countsScaleFactor = 10.355
  writeCountsInterval = 0
  averageCountsOverIterations = ${beam.outputs.defaultWriteInterval}
}

