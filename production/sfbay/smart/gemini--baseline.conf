include "smart-b-lowtech-2040.conf"


beam.agentsim.simulationName = "gemini-runs-2020-06-05/batch6/baseline"
beam.agentsim.lastIteration = 9


# VALUE OF TIME
beam.agentsim.agents.modalBehaviors.modeVotMultiplier.rideHail = 1.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_intercept = 2.57
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_pooled_intercept = 3

# PERSONAL VEHICLE FLEET
beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/../smart/vehicle-tech/gemini_vehicletypes-recharge2040-200.csv"
beam.agentsim.agents.vehicles.fractionOfInitialVehicleFleet = 0.6

# RIDEHAIL FLEET
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet = 0.045

# PARKING
beam.agentsim.agents.rideHail.initialization.parking.filePath = ${beam.inputDirectory}"/../parking/gemini_depot_parking_power_baseline.csv"
beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/../parking/gemini_taz_parking_plugs_1.125_power_150.csv"
beam.agentsim.taz.parkingStallCountScalingFactor = 0.1

# Possible type is one of: normal, experiment_2.0, experiment_2.1, experiment_3.0, experiment_4.0, experiment_5.0, experiment_5.1, experiment_5.2, consecutive_increase_of_population
beam.physsim.relaxation.type = "experiment_5.0"
beam.routing.travelTimeNoiseFraction = 0.5

# INTERVAL
beam.outputs.defaultWriteInterval = 1

# SKIMMER
beam.router.skim = {
  h3Resolution = 6
  keepKLatestSkims = 1
  writeSkimsInterval = 1
  writeAggregatedSkimsInterval = 1
  travel-time-skimmer {
    name = "travel-time-skimmer"
    fileBaseName = "skimsTravelTimeObservedVsSimulated"
  }
  origin_destination_skimmer {
    name = "od-skimmer"
    fileBaseName = "skimsOD"
    writeAllModeSkimsForPeakNonPeakPeriodsInterval = 0
    writeFullSkimsInterval = 0
  }
  taz-skimmer {
    name = "taz-skimmer"
    fileBaseName = "skimsTAZ"
  }
}

#beam.agentsim.agents.rideHail.repositioningManager.name="INVERSE_SQUARE_DISTANCE_REPOSITIONING_FACTOR"
#beam.agentsim.agents.rideHail.repositioningManager.inverseSquareDistanceRepositioningFactor.sensitivityOfRepositioningToDemand = 0.4 ## variable
#beam.agentsim.agents.rideHail.repositioningManager.inverseSquareDistanceRepositioningFactor.sensitivityOfRepositioningToDistance = 0.88668
#beam.agentsim.agents.rideHail.repositioningManager.inverseSquareDistanceRepositioningFactor.predictionHorizon = 3600